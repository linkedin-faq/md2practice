{"version":3,"sources":["components/Challenge/ChallengeComponent.tsx","components/Homepage/LinkedInAssessment.tsx","themeContext.tsx","components/common/Navbar/Navbar.tsx","components/Homepage/questionnaire.svg","components/Homepage/FileUploaderIcon.tsx","components/Homepage/FileUploader.tsx","components/Homepage/Homepage.tsx","components/Challenge/MarkdownCustom.tsx","components/Example/Example.tsx","components/Practice/Practice.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ChallengeStatus","AssessmentCard","props","title","assessmentInfo","replace","url","to","btoa","className","LinkedInAssessment","useState","assessmentInfos","setAssessmentInfo","filterBy","setFilterBy","useEffect","githubLinkedinSource","getAssessmentInfos","then","item","id","type","name","autoComplete","placeholder","onChange","e","target","value","handleSearchBarChange","filter","toLowerCase","includes","map","idx","defaultTheme","ThemeContext","React","createContext","theme","setTheme","str","console","log","ThemeProvider","children","window","localStorage","storedPrefs","getItem","matchMedia","matches","getInitialTheme","rawSetTheme","root","document","documentElement","isDark","classList","remove","add","setItem","Provider","Navbar","history","useHistory","useContext","onClick","push","FileUploaderIcon","width","height","viewBox","xmlns","fillRule","clipRule","d","FileUploader","htmlFor","handleFileUpload","Homepage","urlSubmit","setUrlSubmit","inputType","setInputType","handleMdUrlSubmit","content","alert","src","QuestionnaireLogo","alt","onKeyPress","key","disabled","files","file","text","pathname","state","aria-label","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","components","code","inline","match","exec","style","dracula","language","PreTag","String","MarkdownCustom","ExplainCard","explain","expand","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","SingleChoice","challenge","status","selected","setSelected","choices","getChoices","getFieldClassname","IDLE","getAnswers","WRONG","Fragment","initialValues","onSubmit","values","onSelectedChange","parseInt","setValues","role","aria-labelledby","choice","idxString","checked","CORRECT","Question","displayQuestion","index","question","ChallengeComponent","setStatus","getExplanation","undefined","getQuestion","getIndex","Example","quiz","setQuiz","fetch","response","MdFileProcessor","getQuiz","getChallenges","Practice","location","useLocation","encodedUrl","useParams","practice","setPractice","convertContentToPractice","length","Error","err","atob","catch","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uHAUKA,E,+EC6CCC,EAAiB,SAACC,GACtB,IAAMC,EAAQD,EAAME,eAAeD,MAAME,QAAQ,SAAU,IACrDC,EAAMJ,EAAME,eAAeE,IAOjC,OACE,cAAC,IAAD,CAAMC,GAAE,oBAAeC,KAAKF,IAA5B,SACE,qBAAKG,UAAU,mHAAf,SACE,+BAAON,SAMAO,EA9DY,SAACR,GAAgD,IAAD,EACzE,EAA6CS,qBAA7C,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,uBAAqBC,qBAAqBC,MAAK,SAACC,GAC9CP,EAAkBO,QAEnB,IAUH,OACE,sBAAKX,UAAS,uCAAkCP,EAAMO,WAAtD,UACE,qBACEY,GAAG,yBACHZ,UAAU,qHAFZ,SAIE,uBACEa,KAAK,SACLC,KAAK,oBACLF,GAAG,oBACHG,aAAa,MACbC,YAAY,6BACZhB,UAAU,yFACViB,SAAU,SAACC,GAAD,OArBY,SAACA,GAC7BZ,EAAYY,EAAEC,OAAOC,OAoBEC,CAAsBH,QAI3C,qBAAKN,GAAG,4BAA4BZ,UAAU,OAA9C,mBApBF,OAAOG,QAAP,IAAOA,OAAP,EAAOA,EAAiBmB,QAAO,SAACX,GAAD,OAAUA,EAAKjB,MAAM6B,cAAcC,SAASnB,GAAY,cAoBrF,aACG,EAAwBoB,KAAI,SAACd,EAAMe,GAClC,OAAO,cAAC,EAAD,CAA0B/B,eAAgBgB,GAArBe,YC5ChCC,EAAe,QAwBRC,EAAeC,IAAMC,cAAc,CAC9CC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAiBC,QAAQC,IAAR,qCAA0CF,OAG1DG,EAAgB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAC9B,EAA0BR,IAAM3B,SAvBV,WACtB,GAAsB,qBAAXoC,QAA0BA,OAAOC,aAAc,CACxD,IAAMC,EAAcF,OAAOC,aAAaE,QAAQ,eAChD,GAA2B,kBAAhBD,EACT,OAAOA,EAIT,GADkBF,OAAOI,WAAW,gCACtBC,QACZ,MAAO,OAKX,OAAOhB,EASkCiB,IAAzC,mBAAOb,EAAP,KAAcC,EAAd,KAEMa,EAAc,SAACd,GACnB,IAAMe,EAAOR,OAAOS,SAASC,gBACvBC,EAAmB,SAAVlB,EAEfe,EAAKI,UAAUC,OAAOF,EAAS,QAAU,QACzCH,EAAKI,UAAUE,IAAIrB,GAEnBQ,aAAac,QAAQ,cAAetB,IAWtC,OARIA,GACFc,EAAYd,GAGdF,IAAMtB,WAAU,WACdsC,EAAYd,KACX,CAACA,IAEG,cAACH,EAAa0B,SAAd,CAAuBlC,MAAO,CAAEW,QAAOC,YAAvC,SAAoDK,KC3B9CkB,EAvBA,WACb,IAAMC,EAAUC,cAChB,EAA4BC,qBAAW9B,GAA/BG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAMf,OACE,sBAAKhC,UAAU,kEAAf,UACE,yBAAQA,UAAU,yDAAyD2D,QAAS,kBAAMH,EAAQI,KAAK,MAAvG,UACE,sBAAM5D,UAAU,mBAAhB,iBADF,cAGA,qBAAKA,UAAU,WAAf,SACE,wBACEA,UAAU,0GACV2D,QAZY,WAClB3B,EAAmB,SAAVD,EAAmB,QAAU,SASlC,mBAGe,SAAVA,EAAmB,QAAU,OAHlC,kBClBO,MAA0B,0CCmB1B8B,EAnBU,WACvB,OACE,sBACE7D,UAAU,gDACV8D,MAAM,OACNC,OAAO,OACPC,QAAQ,YACRC,MAAM,6BALR,UAOE,sBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,kaAEJ,sBAAMA,EAAE,+fCGCC,EAXM,SAAC5E,GACpB,OACE,iCACE,uBAAO6E,QAAQ,cAActE,UAAU,iBAAvC,SACE,cAAC,EAAD,MAEF,uBAAOA,UAAU,SAASY,GAAG,cAAcC,KAAK,OAAOC,KAAK,cAAcG,SAAUxB,EAAM8E,uBCmIjFC,EAxIE,WACf,IAAMhB,EAAUC,cAChB,EAAkCvD,mBAAiB,IAAnD,mBAAOuE,EAAP,KAAkBC,EAAlB,KACA,EAAkCxE,mBAAiB,IAAnD,mBAAOyE,EAAP,KAAkBC,EAAlB,KAEMC,EAAoB,WACpBJ,GACFG,EAAa,OACbpB,EAAQI,KAAR,oBAA0B7D,KAAK0E,IAAc,CAAEK,QAAS,GAAIH,UAAW,SAEvEI,MAAM,eAqBV,OACE,gCACE,cAAC,EAAD,IAUA,yBAAS/E,UAAU,QAAnB,SACE,sBAAKA,UAAU,4BAAf,UACE,sBAAKA,UAAU,sEAAf,UACE,sBAAMA,UAAU,sDAAhB,yCACA,sBAAMA,UAAU,wEAAhB,oDAIF,qBAAKA,UAAU,uDAAf,SACE,qBAAKA,UAAU,gBAAgBgF,IAAKC,EAAmBC,IAAI,8BAKjE,yBAASlF,UAAU,qBAAnB,SACE,sBAAKA,UAAU,gEAAf,UACE,sBAAKA,UAAU,qHAAf,UACE,uBACEiB,SAAU,SAACC,GAAD,OAAOwD,EAAaxD,EAAEC,OAAOC,QACvC+D,WAAY,SAACjE,GACG,UAAVA,EAAEkE,KACJP,KAGJzD,MAAOqD,EACPY,SAAwB,SAAdV,EACV9D,KAAK,SACLC,KAAK,SACLC,aAAa,MACbH,GAAG,gBACHI,YAAY,kBACZhB,UAAU,2FAEZ,cAAC,EAAD,CAAcuE,iBA9DuC,SAACrD,GAC9D,GAAIA,EAAEC,OAAOmE,MAAO,CAClB,IAAMC,EAAOrE,EAAEC,OAAOmE,MAAM,GAC5BV,EAAa,QACbF,EAAa,kBAAD,OAAmBa,EAAKzE,OACpCyE,EAAKC,OAAO9E,MAAK,SAACoE,GAChBtB,EAAQI,KAAK,CACX6B,SAAU,YACVC,MAAO,CACLZ,QAASA,EACTH,UAAW,iBAqDX,wBACEhB,QAASkB,EACThE,KAAK,SACL8E,aAAW,aACX3F,UAAU,2DAJZ,SAME,qBACEiE,MAAM,6BACNjE,UAAU,UACV4F,KAAK,OACL5B,QAAQ,YACR6B,OAAO,eALT,SAOE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACb5B,EAAE,qEAMV,qBAAKpE,UAAU,qCAAf,gBACA,qBAAKA,UAAU,mDACf,sBAAKA,UAAU,qCAAf,UACE,qBACEiE,MAAM,6BACNjE,UAAU,8BACVgE,QAAQ,YACR4B,KAAK,eAJP,SAME,sBACE1B,SAAS,UACTE,EAAE,+NACFD,SAAS,cAGb,gEACA,qBACEF,MAAM,6BACNjE,UAAU,8BACVgE,QAAQ,YACR4B,KAAK,eAJP,SAME,sBACE1B,SAAS,UACTE,EAAE,+NACFD,SAAS,iBAIf,cAAC,EAAD,CAAoBnE,UAAU,kB,6DCnIlCiG,EAAa,CAEjBC,KAFiB,YAEqC,IAA/CC,EAA8C,EAA9CA,OAAQnG,EAAsC,EAAtCA,UAAWqC,EAA2B,EAA3BA,SAAa5C,EAAc,iDAC7C2G,EAAQ,iBAAiBC,KAAKrG,GAAa,IACjD,OAAQmG,GAAUC,EAChB,cAAC,IAAD,aACEpG,UAAS,UAAKA,EAAL,wBACTsG,MAAOC,IACPC,SAAUJ,EAAM,GAChBK,OAAO,MACPpE,SAAUqE,OAAOrE,GAAUzC,QAAQ,MAAO,KACtCH,IAGN,kCAAMO,UAAS,UAAKA,GAAaqC,SAAUA,GAAc5C,MAahDkH,EAJQ,SAAClH,GACtB,OAAO,cAAC,IAAD,CAAewG,WAAYA,EAAY5D,SAAU5C,EAAMqF,W,mBRnB3DvF,O,eAAAA,I,qBAAAA,I,kBAAAA,M,KAML,IA0BMqH,EAAc,SAACnH,GACnB,IAAQoH,EAAoBpH,EAApBoH,QAASC,EAAWrH,EAAXqH,OAUjB,OACE,cAAC,IAAD,CACEC,KAAMD,EACNE,MAAM,6CACNC,UAAU,qBACVC,QAAQ,wBACRC,MAAM,2CACNC,UAAU,wBACVC,QAAQ,qBAPV,SASE,qBAAKrH,UAAS,0CAjBZ8G,EACK,QAEA,0BAcP,SACE,mBAAG9G,UAAU,8DAAb,SAA4E6G,SAY9ES,EAAe,SAAC7H,GACpB,IAAQ8H,EAAsB9H,EAAtB8H,UAAWC,EAAW/H,EAAX+H,OACnB,EAAgCtH,oBAAkB,GAAlD,mBAAOuH,EAAP,KAAiBC,EAAjB,KACMC,EAAUJ,EAAUK,aAQpBC,EAAoB,SAACnG,GACzB,OAAI8F,IAAWjI,EAAgBuI,MAAQP,EAAUQ,aAAavG,SAASE,GAC9D,sDACE8F,IAAWjI,EAAgByI,OAAStG,IAAQ+F,EAC9C,oDACED,IAAWjI,EAAgBuI,KAC7B,sBAEA,IAcX,OACE,cAAC,IAAMG,SAAP,UACE,cAAC,IAAD,CACEC,cAAe,CACbT,SAAU,IAEZU,SAAU,SAACC,GACT3I,EAAM4I,iBAAiB,CAACC,SAASF,EAAOX,YACxCC,EAAYY,SAASF,EAAOX,YANhC,SASG,gBAAGW,EAAH,EAAGA,OAAQG,EAAX,EAAWA,UAAX,OACC,eAAC,IAAD,WACE,qBAAKvI,UAAU,gBAAgBwI,KAAK,QAAQC,kBAAgB,uBAA5D,SACGd,EAAQlG,KAAI,SAACiH,EAAQhH,GACpB,IAAMiH,EAAYjC,OAAOhF,GAEzB,OACE,sBAAK1B,UAAS,6CAAwC6H,EAAkBnG,IAAxE,UACE,cAAC,IAAD,CACEb,KAAK,QACLC,KAAK,WACL8H,QAASD,IAAcP,EAAOX,SAC9BrG,MAAOuH,IAGT,sBACE3I,UAAU,gEACV2D,QAAS,WACH6D,IAAWjI,EAAgBuI,MAC7BS,EAAU,CAAEd,SAAUf,OAAOhF,MAJnC,SAQE,cAAC,EAAD,CAAgBoD,QAAS4D,QAhBwDhH,QAuB3F,wBAEE1B,UAAS,4EApDfwH,IAAWjI,EAAgBsJ,QACtB,mCACErB,IAAWjI,EAAgByI,MAC7B,iCAEA,iBA+CU,iIACTnH,KAAK,SAHP,4BAsCNiI,EAAW,SAACrJ,GAChB,IAAMsJ,EAAkB,IAAMtJ,EAAMuJ,MAAQ,KAAOvJ,EAAMwJ,SAEzD,OACE,qBAAKjJ,UAAU,yDAAf,SACE,cAAC,EAAD,CAAgB8E,QAASiE,OAKhBG,EAtLY,SAACzJ,GAC1B,IAAQ8H,EAAc9H,EAAd8H,UACR,EAA4BrH,mBAASX,EAAgBuI,MAArD,mBAAON,EAAP,KAAe2B,EAAf,KACA,EAAgCjJ,qBAAhC,mBAAOuH,EAAP,KAAiBC,EAAjB,KACMb,EAAUU,EAAU6B,iBAY1B,OAVA7I,qBAAU,gBACS8I,IAAb5B,GAA0BF,EAAUQ,aAAavG,SAASiG,EAAS,IACrE0B,EAAU5J,EAAgBsJ,cACJQ,IAAb5B,EACT0B,EAAU5J,EAAgByI,YACJqB,IAAb5B,GACT0B,EAAU5J,EAAgBuI,QAE3B,CAACL,EAAUF,IAGZ,sBAAKvH,UAAU,sFAAf,UACE,cAAC,EAAD,CAAUiJ,SAAU1B,EAAU+B,cAAeN,MAAOzB,EAAUgC,aAC9D,cAAC,EAAD,CAAchC,UAAWA,EAAWC,OAAQA,EAAQa,iBAAkB,SAACjH,GAAD,OAAWsG,EAAYtG,MAC5FyF,EAAU,cAAC,EAAD,CAAaA,QAASA,EAASC,OAAQU,IAAWjI,EAAgBuI,OAA0B,SSL9F0B,EA3BC,WACd,MAAwBtJ,qBAAxB,mBAAOuJ,EAAP,KAAaC,EAAb,KAaA,OAXAnJ,qBAAU,WACRoJ,MAAM,yGACHjJ,MAAK,SAACkJ,GAAD,OAAcA,EAASpE,UAC5B9E,MAAK,SAACoE,GACL,IACM2E,EADkB,IAAII,kBAAgB/E,GACfgF,UAC7B5H,QAAQC,IAAIsH,GACZC,EAAQD,QAEX,IAGD,qBAAKzJ,UAAU,4GAAf,SACGyJ,EACGA,EAAKM,gBAAgBtI,KAAI,SAACd,EAAMe,GAC9B,OAAO,cAAC,EAAD,CAA8B6F,UAAW5G,GAAhBe,MAElC,QCwCKsI,EA1DE,WACf,IAAMxG,EAAUC,cACVwG,EAAWC,cACTC,EAAeC,cAAfD,WAER,EAAgCjK,qBAAhC,mBAAOmK,EAAP,KAAiBC,EAAjB,KAEMC,EAA2B,SAACzF,GAChC,IACE,IACMuF,EADkB,IAAIR,kBAAgB/E,GACXgF,UACjC,GAAwC,IAApCO,EAASN,gBAAgBS,OAC3B,MAAMC,MAAM,0BAEdH,EAAYD,GACZ,MAAOK,GACP,MAAMD,MAAM,wCA0BhB,OAtBAlK,qBAAU,WACR,GAAI0J,EAASvE,OAAsC,SAA7BuE,EAASvE,MAAMf,UACnCzC,QAAQC,IAAI8H,EAASvE,OACrB6E,EAAyBN,EAASvE,MAAMZ,cAExC,GAAKqF,EAEE,CACL,IAAMtK,EAAM8K,KAAKR,GACjBR,MAAM9J,GACHa,MAAK,SAACkJ,GAAD,OAAcA,EAASpE,UAC5B9E,MAAK,SAACoE,GACLyF,EAAyBzF,MAE1B8F,OAAM,WACL7F,MAAM,0BACNvB,EAAQI,KAAK,aAVjBJ,EAAQI,KAAK,OAchB,CAACuG,EAAY3G,EAASyG,IAGvB,sBAAKjK,UAAU,qBAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,iDAAf,SACGqK,EACGA,EAASN,gBAAgBtI,KAAI,SAACd,EAAMe,GAClC,OAAO,cAAC,EAAD,CAA8B6F,UAAW5G,GAAhBe,MAElC,WCjCGmJ,MAhBf,WAIE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAYC,SAAS,IAArB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzG,IACjC,cAAC,IAAD,CAAOuG,OAAK,EAACC,KAAK,WAAWC,UAAWzB,IACxC,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,YAAYC,UAAWjB,IACzC,cAAC,IAAD,CAAOgB,KAAK,wBAAwBC,UAAWjB,UCHxCkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB1K,MAAK,YAAkD,IAA/C2K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7I,SAAS8I,eAAe,SAM1BX,K","file":"static/js/main.f2775537.chunk.js","sourcesContent":["import { Challenge } from \"quiz-too\";\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport MarkdownCustom from \"./MarkdownCustom\";\nimport { Transition } from \"@tailwindui/react\";\n\ninterface challengeProps {\n  challenge: Challenge;\n}\n\nenum ChallengeStatus {\n  IDLE,\n  CORRECT,\n  WRONG,\n}\n\nconst ChallengeComponent = (props: challengeProps): JSX.Element => {\n  const { challenge } = props;\n  const [status, setStatus] = useState(ChallengeStatus.IDLE);\n  const [selected, setSelected] = useState<number[]>();\n  const explain = challenge.getExplanation();\n\n  useEffect(() => {\n    if (selected !== undefined && challenge.getAnswers().includes(selected[0])) {\n      setStatus(ChallengeStatus.CORRECT);\n    } else if (selected !== undefined) {\n      setStatus(ChallengeStatus.WRONG);\n    } else if (selected === undefined) {\n      setStatus(ChallengeStatus.IDLE);\n    }\n  }, [selected, challenge]);\n\n  return (\n    <div className=\"block p-2 text-xs mx-10 my-4 md:text-base border rounded-lg shadow dark:bg-gray-800\">\n      <Question question={challenge.getQuestion()} index={challenge.getIndex()} />\n      <SingleChoice challenge={challenge} status={status} onSelectedChange={(value) => setSelected(value)} />\n      {explain ? <ExplainCard explain={explain} expand={status !== ChallengeStatus.IDLE ? true : false} /> : null}\n      {/* <button className=\"mt-2 p-2\" onClick={()=>setSelected(undefined)}>REFRESH</button> */}\n    </div>\n  );\n};\n\nconst ExplainCard = (props: { explain: string; expand: boolean }) => {\n  const { explain, expand } = props;\n\n  const getClassname = () => {\n    if (expand) {\n      return \"block\";\n    } else {\n      return \"overflow-hidden hidden\";\n    }\n  };\n\n  return (\n    <Transition\n      show={expand}\n      enter=\"transition ease-out duration-500 transform\"\n      enterFrom=\"opacity-0 scale-95\"\n      enterTo=\"opacity-100 scale-100\"\n      leave=\"transition ease-in duration-75 transform\"\n      leaveFrom=\"opacity-100 scale-100\"\n      leaveTo=\"opacity-0 scale-95\"\n    >\n      <div className={`border-t-2 p-4 mt-4 select-text ${getClassname()}`}>\n        <p className=\"break-words text-gray-700 dark:text-gray-50 text-opacity-80\">{explain}</p>\n      </div>\n    </Transition>\n  );\n};\n\ninterface singleChoiceProps {\n  challenge: Challenge;\n  status: ChallengeStatus;\n  onSelectedChange: (selected: number[]) => void;\n}\n\nconst SingleChoice = (props: singleChoiceProps) => {\n  const { challenge, status } = props;\n  const [selected, setSelected] = useState<number>(-9);\n  const choices = challenge.getChoices();\n\n  // useEffect(()=>{\n  //     if(selected === undefined){\n  //         status = ChallengeStatus.IDLE;\n  //     }\n  // },[selected])\n\n  const getFieldClassname = (idx: number): string => {\n    if (status !== ChallengeStatus.IDLE && challenge.getAnswers().includes(idx)) {\n      return \"bg-gradient-to-r from-green-500 pointer-events-none\";\n    } else if (status === ChallengeStatus.WRONG && idx === selected) {\n      return \"bg-gradient-to-r from-red-500 pointer-events-none\";\n    } else if (status !== ChallengeStatus.IDLE) {\n      return \"pointer-events-none\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const getButtonClassname = () => {\n    if (status === ChallengeStatus.CORRECT) {\n      return \"bg-green-400 pointer-events-none\";\n    } else if (status === ChallengeStatus.WRONG) {\n      return \"bg-red-400 pointer-events-none\";\n    } else {\n      return \"bg-primary-400\";\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={{\n          selected: \"\",\n        }}\n        onSubmit={(values) => {\n          props.onSelectedChange([parseInt(values.selected)]);\n          setSelected(parseInt(values.selected));\n        }}\n      >\n        {({ values, setValues }) => (\n          <Form>\n            <div className=\"flex-col my-5\" role=\"group\" aria-labelledby=\"single-choices-group\">\n              {choices.map((choice, idx) => {\n                const idxString = String(idx);\n\n                return (\n                  <div className={`flex items-center p-2 rounded-l-lg ${getFieldClassname(idx)}`} key={idx}>\n                    <Field\n                      type=\"radio\"\n                      name=\"selected\"\n                      checked={idxString === values.selected ? true : false}\n                      value={idxString}\n                    />\n\n                    <span\n                      className=\"w-11/12 mx-2 overflow-x-auto text-gray-800 dark:text-gray-100\"\n                      onClick={() => {\n                        if (status === ChallengeStatus.IDLE) {\n                          setValues({ selected: String(idx) });\n                        }\n                      }}\n                    >\n                      <MarkdownCustom content={choice} />\n                    </span>\n                    {/* <Field component={RadioContent} valueName=\"selected\" value={String(idx)} content={choice} selected={values.selected}/> */}\n                  </div>\n                );\n              })}\n            </div>\n            <button\n              // className={`block p-2 font-bold uppercase transition duration-200 ease-in-out ${getButtonClassname()} text-gray-100 rounded-lg m-1 transform hover:-translate-y-1 hover:scale-110 hover:bg-primary-600 focus:outline-none`}\n              className={`block p-2 font-bold uppercase transition duration-200 ease-in-out ${getButtonClassname()} text-gray-100 rounded-lg m-1 transform xl:hover:-translate-y-1 xl:hover:scale-110 xl:hover:bg-primary-600 focus:outline-none`}\n              type=\"submit\"\n            >\n              Check\n            </button>\n          </Form>\n        )}\n      </Formik>\n      {/* <button onClick={()=>setSelected(undefined)}>REFRESH</button> */}\n    </React.Fragment>\n  );\n};\n\n// interface radioContentProps {\n//     valueName:string,\n//     value:string,\n//     content:string\n//     selected:string\n// }\n\n// const RadioContent = (props:radioContentProps) => {\n\n//     const {valueName, value, content, selected} = props;\n\n//     const [field, , helpers] = useField({ name: valueName, type: \"radio\", value: value });\n\n//     const { setValue } = helpers;\n\n//     return (\n//         <React.Fragment>\n//             <input {...field} checked={value === selected} type=\"radio\"></input>\n//             <span className=\"ml-3 w-full\" onClick={()=>{setValue(value)}}><MarkdownCustom content={content}/></span>\n//         </React.Fragment>\n//     );\n// };\n\nconst Question = (props: { question: string; index: number }) => {\n  const displayQuestion = \"Q\" + props.index + \". \" + props.question;\n\n  return (\n    <div className=\"border-primary-400 border-b-2 p-2 pb-4 overflow-x-auto\">\n      <MarkdownCustom content={displayQuestion} />\n    </div>\n  );\n};\n\nexport default ChallengeComponent;\n","import React, { useEffect, useState } from \"react\";\nimport { githubLinkedinSource } from \"quiz-too\";\nimport { Link } from \"react-router-dom\";\n\ninterface AssessmentInfo {\n  title: string;\n  url: string;\n  questionCount: number;\n}\n\n\nconst LinkedInAssessment = (props: { className?: string }): JSX.Element => {\n  const [assessmentInfos, setAssessmentInfo] = useState<AssessmentInfo[]>();\n  const [filterBy, setFilterBy] = useState<string>();\n\n  useEffect(() => {\n    githubLinkedinSource.getAssessmentInfos().then((item) => {\n      setAssessmentInfo(item);\n    });\n  }, []);\n\n  const handleSearchBarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterBy(e.target.value);\n  };\n\n  const getDisplayAssessment = () => {\n    return assessmentInfos?.filter((item) => item.title.toLowerCase().includes(filterBy || \"\"));\n  };\n\n  return (\n    <div className={`flex flex-col justify-center ${props.className}`}>\n      <div\n        id=\"searchbar-for-linkedin\"\n        className=\"w-full h-10 pl-3 pr-2 bg-gray-50 dark:bg-gray-800 border-2 rounded-full flex justify-between items-center relative\"\n      >\n        <input\n          type=\"search\"\n          name=\"filter-assessment\"\n          id=\"filter-assessment\"\n          autoComplete=\"off\"\n          placeholder=\"Filter LinkedIn Assessment\"\n          className=\"bg-gray-50 dark:bg-gray-800 w-full outline-none focus:outline-none active:outline-none\"\n          onChange={(e) => handleSearchBarChange(e)}\n        />\n      </div>\n\n      <div id=\"linkedin-assessment-lists\" className=\"mt-4\">\n        {getDisplayAssessment()?.map((item, idx) => {\n          return <AssessmentCard key={idx} assessmentInfo={item} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst AssessmentCard = (props: { assessmentInfo: AssessmentInfo }): JSX.Element => {\n  const title = props.assessmentInfo.title.replace(/\\[|\\]/g, \"\");\n  const url = props.assessmentInfo.url;\n\n  // const handleClickCard = () => {\n  //   console.log(url);\n  //   hashHistory\n  // }\n\n  return (\n    <Link to={`/practice/${btoa(url)}`}>\n      <div className=\"p-2 m-1 bg-secondary-500 dark:bg-gray-800 font-bold text-gray-100 rounded-sm shadow text-sm flex justify-between\">\n        <span>{title}</span>\n        {/* <span className=\"text-gray-300\">{questionCount}</span> */}\n      </div>\n    </Link>\n  );\n};\nexport default LinkedInAssessment;\n","// themeContext.js\n\nimport React from \"react\";\n\nconst defaultTheme = \"light\";\n\ninterface Props {\n  //   initialTheme: string;\n  children: React.ReactNode;\n}\n\nconst getInitialTheme = () => {\n  if (typeof window !== \"undefined\" && window.localStorage) {\n    const storedPrefs = window.localStorage.getItem(\"color-theme\");\n    if (typeof storedPrefs === \"string\") {\n      return storedPrefs;\n    }\n\n    const userMedia = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    if (userMedia.matches) {\n      return \"dark\";\n    }\n  }\n\n  // If you want to use light theme as the default, return \"light\" instead\n  return defaultTheme;\n};\n\nexport const ThemeContext = React.createContext({\n  theme: defaultTheme,\n  setTheme: (str: string) => console.log(`setTheme function is null. ${str}`),\n});\n\nexport const ThemeProvider = ({ children }: Props): JSX.Element => {\n  const [theme, setTheme] = React.useState(getInitialTheme());\n\n  const rawSetTheme = (theme: string) => {\n    const root = window.document.documentElement;\n    const isDark = theme === \"dark\";\n\n    root.classList.remove(isDark ? \"light\" : \"dark\");\n    root.classList.add(theme);\n\n    localStorage.setItem(\"color-theme\", theme);\n  };\n\n  if (theme) {\n    rawSetTheme(theme);\n  }\n\n  React.useEffect(() => {\n    rawSetTheme(theme);\n  }, [theme]);\n\n  return <ThemeContext.Provider value={{ theme, setTheme }}>{children}</ThemeContext.Provider>;\n};\n","import { useHistory } from \"react-router\";\nimport { ThemeContext } from \"../../../themeContext\";\nimport { useContext } from \"react\";\n\nconst Navbar = (): JSX.Element => {\n  const history = useHistory();\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const toggleTheme = () => {\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  return (\n    <div className=\"z-50 flex justify-between md:px-10 bg-gray-100 dark:bg-gray-900\">\n      <button className=\"m-2 p-2 text-lg uppercase font-bold focus:outline-none\" onClick={() => history.push(\"/\")}>\n        <span className=\"text-primary-500\">MD2</span>Practice\n      </button>\n      <div className=\"m-2 my-4\">\n        <button\n          className=\"p-2 text-md bold border-4 rounded-lg capitalize border-gray-700 dark:border-gray-100 focus:outline-none\"\n          onClick={toggleTheme}\n        >{`${theme === \"dark\" ? \"light\" : \"dark\"} Theme`}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/questionnaire.da1f0384.svg\";","const FileUploaderIcon = (): JSX.Element => {\n  return (\n    <svg\n      className=\"fill-current text-black dark:text-primary-100\"\n      width=\"24px\"\n      height=\"24px\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.25 5C4.25 3.48122 5.48122 2.25 7 2.25H14.9868C15.5506 2.25 16.0798 2.52157 16.4085 2.97955L19.4217 7.17745C19.6352 7.47488 19.75 7.83178 19.75 8.1979V19C19.75 20.5188 18.5188 21.75 17 21.75H7C5.48122 21.75 4.25 20.5188 4.25 19V5ZM7 3.75C6.30964 3.75 5.75 4.30964 5.75 5V19C5.75 19.6904 6.30964 20.25 7 20.25H17C17.6904 20.25 18.25 19.6904 18.25 19V8.89705H15C14.5858 8.89705 14.25 8.56126 14.25 8.14705V3.75H7Z\"\n      />\n      <path d=\"M15.0857 13.2185C14.8269 13.542 14.355 13.5944 14.0315 13.3357L12.7501 12.3105V15.75C12.7501 16.1642 12.4143 16.5 12.0001 16.5C11.5858 16.5 11.2501 16.1642 11.2501 15.75V12.3104L9.96855 13.3357C9.6451 13.5944 9.17313 13.542 8.91438 13.2185C8.65562 12.8951 8.70806 12.4231 9.03151 12.1643L11.5288 10.1665C11.6561 10.0636 11.8177 10.0015 11.9937 10C11.9958 10 11.9979 10 12.0001 10L12.0025 10C12.1816 10.0006 12.3459 10.0639 12.4746 10.1692L14.9685 12.1643C15.292 12.4231 15.3444 12.8951 15.0857 13.2185Z\" />\n    </svg>\n  );\n};\n\nexport default FileUploaderIcon;\n","import FileUploaderIcon from \"./FileUploaderIcon\";\n\ninterface Props {\n  handleFileUpload: React.ChangeEventHandler<HTMLInputElement>;\n}\n\nconst FileUploader = (props: Props): JSX.Element => {\n  return (\n    <span>\n      <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\n        <FileUploaderIcon />\n      </label>\n      <input className=\"hidden\" id=\"file-upload\" type=\"file\" name=\"file-upload\" onChange={props.handleFileUpload} />\n    </span>\n  );\n};\n\nexport default FileUploader;\n","import { ChangeEventHandler, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport LinkedInAssessment from \"./LinkedInAssessment\";\nimport Navbar from \"../common/Navbar/Navbar\";\nimport QuestionnaireLogo from \"./questionnaire.svg\";\nimport FileUploader from \"./FileUploader\";\n\nconst Homepage = (): JSX.Element => {\n  const history = useHistory();\n  const [urlSubmit, setUrlSubmit] = useState<string>(\"\");\n  const [inputType, setInputType] = useState<string>(\"\");\n\n  const handleMdUrlSubmit = () => {\n    if (urlSubmit) {\n      setInputType(\"URL\");\n      history.push(`/practice/${btoa(urlSubmit)}`, { content: \"\", inputType: \"URL\" });\n    } else {\n      alert(\"Key in URL\");\n    }\n  };\n\n  const handleFileUpload: ChangeEventHandler<HTMLInputElement> = (e) => {\n    if (e.target.files) {\n      const file = e.target.files[0];\n      setInputType(\"FILE\");\n      setUrlSubmit(`File Selected: ${file.name}`);\n      file.text().then((content) => {\n        history.push({\n          pathname: \"/practice\",\n          state: {\n            content: content,\n            inputType: \"FILE\",\n          },\n        });\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      {/* <div className=\"flex justify-between md:px-10\">\n        <button className=\"m-2 p-2 text-lg uppercase font-bold focus:outline-none\">\n          <span className=\"text-primary-500\">MD2</span>Practice\n        </button>\n        <div className=\"m-2 p-2 text-md\">\n          <button></button> Dark Theme\n        </div>\n      </div> */}\n\n      <section className=\"mt-10\">\n        <div className=\"flex justify-around px-10\">\n          <div className=\"flex flex-col w-1/2 justify-center justify-items-center text-center\">\n            <span className=\"text-md md:text-4xl lg:text-8xlmd:text-lg font-bold\">Simple Practice Test Engine</span>\n            <span className=\"text-xs md:text-2xl lg:text-6xlmd:text-lg fond-semibold text-gray-400\">\n              Convert MD File to Q&amp;A for Practice\n            </span>\n          </div>\n          <div className=\"flex justify-center justify-items-center text-center\">\n            <img className=\"w-full h-full\" src={QuestionnaireLogo} alt=\"questionnaire-logo\" />\n          </div>\n        </div>\n      </section>\n\n      <section className=\"md:w-2/3 md:m-auto\">\n        <div className=\"flex flex-col mx-10 my-20 justify-center justify-items-center\">\n          <div className=\"w-full h-10 pl-3 pr-2 bg-gray-50 dark:bg-gray-800 border-2 rounded-full flex justify-between items-center relative\">\n            <input\n              onChange={(e) => setUrlSubmit(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  handleMdUrlSubmit();\n                }\n              }}\n              value={urlSubmit}\n              disabled={inputType === \"FILE\" ? true : false}\n              type=\"search\"\n              name=\"md-url\"\n              autoComplete=\"off\"\n              id=\"md-url-submit\"\n              placeholder=\"URL for MD File\"\n              className=\"bg-gray-50 dark:bg-gray-800 w-full outline-none focus:outline-none active:outline-none\"\n            />\n            <FileUploader handleFileUpload={handleFileUpload} />\n            <button\n              onClick={handleMdUrlSubmit}\n              type=\"submit\"\n              aria-label=\"url-button\"\n              className=\"ml-1 outline-none focus:outline-none active:outline-none\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n            </button>\n          </div>\n\n          <div className=\"text-lg uppercase text-center my-2\">OR</div>\n          <div className=\"border border-b-2 shadow-md border-primary-700\"></div>\n          <div className=\"mt-4 font-bold flex justify-center\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"animate-bounce mr-2 h-5 w-5\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            <span>LinkedIn Assessment Practice</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"animate-bounce ml-2 h-5 w-5\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n          <LinkedInAssessment className=\"mt-4\" />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n/* Use `…/dist/cjs/…` if you’re not in ESM! */\nimport { dracula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nconst components = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  code({ inline, className, children, ...props }: any) {\n    const match = /language-(\\w+)/.exec(className || \"\");\n    return !inline && match ? (\n      <SyntaxHighlighter\n        className={`${className} pointer-events-auto`}\n        style={dracula}\n        language={match[1]}\n        PreTag=\"div\"\n        children={String(children).replace(/\\n$/, \"\")}\n        {...props}\n      />\n    ) : (\n      <code className={`${className}`} children={children} {...props} />\n    );\n  },\n};\n\ninterface Props {\n  content: string;\n}\n\nconst MarkdownCustom = (props: Props): JSX.Element => {\n  return <ReactMarkdown components={components} children={props.content} />;\n};\n\nexport default MarkdownCustom;\n","import { MdFileProcessor, Quiz } from \"quiz-too\";\nimport { useEffect, useState } from \"react\";\nimport ChallengeComponent from \"../Challenge/ChallengeComponent\";\n\nconst Example = (): JSX.Element => {\n  const [quiz, setQuiz] = useState<Quiz>();\n\n  useEffect(() => {\n    fetch(\"https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/css/css-quiz.md\")\n      .then((response) => response.text())\n      .then((content) => {\n        const mdFileProcessor = new MdFileProcessor(content);\n        const quiz = mdFileProcessor.getQuiz();\n        console.log(quiz);\n        setQuiz(quiz);\n      });\n  }, []);\n\n  return (\n    <div className=\"flex-col justify-items-center pt-10 font-mono select-none bg-gray-100 dark:bg-gray-900 dark:text-gray-100\">\n      {quiz\n        ? quiz.getChallenges().map((item, idx) => {\n            return <ChallengeComponent key={idx} challenge={item} />;\n          })\n        : null}\n      {/* {quiz? <ChallengeComponent challenge={quiz.getChallenges()[8]} />: null}\n      {quiz? <ChallengeComponent challenge={quiz.getChallenges()[9]} />: null} */}\n    </div>\n  );\n};\n\nexport default Example;\n","import { MdFileProcessor, Quiz } from \"quiz-too\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport ChallengeComponent from \"../Challenge/ChallengeComponent\";\nimport Navbar from \"../common/Navbar/Navbar\";\n\nconst Practice = (): JSX.Element => {\n  const history = useHistory();\n  const location = useLocation<{ content: string; inputType: string }>();\n  const { encodedUrl } = useParams<{ encodedUrl: string }>();\n\n  const [practice, setPractice] = useState<Quiz>();\n\n  const convertContentToPractice = (content: string) => {\n    try {\n      const mdFileProcessor = new MdFileProcessor(content);\n      const practice = mdFileProcessor.getQuiz();\n      if (practice.getChallenges().length === 0) {\n        throw Error(\"No Challenge Detected.\");\n      }\n      setPractice(practice);\n    } catch (err) {\n      throw Error(\"Content is not in expected format.\");\n    }\n  };\n\n  useEffect(() => {\n    if (location.state && location.state.inputType === \"FILE\") {\n      console.log(location.state);\n      convertContentToPractice(location.state.content);\n    } else {\n      if (!encodedUrl) {\n        history.push(\"/\");\n      } else {\n        const url = atob(encodedUrl);\n        fetch(url)\n          .then((response) => response.text())\n          .then((content) => {\n            convertContentToPractice(content);\n          })\n          .catch(() => {\n            alert(\"fail to load practice.\");\n            history.push(\"/\");\n          });\n      }\n    }\n  }, [encodedUrl, history, location]);\n\n  return (\n    <div className=\"dark:text-gray-100\">\n      <Navbar />\n      <div className=\"flex-col justify-items-center pt-2 select-none\">\n        {practice\n          ? practice.getChallenges().map((item, idx) => {\n              return <ChallengeComponent key={idx} challenge={item} />;\n            })\n          : null}\n        {/* {quiz? <ChallengeComponent challenge={quiz.getChallenges()[8]} />: null}\n          {quiz? <ChallengeComponent challenge={quiz.getChallenges()[9]} />: null} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Practice;\n","import \"./css/index.css\";\nimport Homepage from \"./components/Homepage/Homepage\";\nimport Example from \"./components/Example/Example\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Practice from \"./components/Practice/Practice\";\nimport { ThemeProvider } from \"./themeContext\";\n\nfunction App(): JSX.Element {\n  // return <Homepage />;\n  // return <Example/>\n\n  return (\n    <ThemeProvider>\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\" component={Homepage} />\n        <Route exact path=\"/example\" component={Example} />\n        <Route exact path=\"/practice\" component={Practice} />\n        <Route path=\"/practice/:encodedUrl\" component={Practice} />\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}